statements --> statement+

statement --> small_stmt | compound_stmt

small_stmt --> assign_stmt | return_stmt | import_stmt | global_stmt | nonlocal_stmt | print_stmt

compound_stmt --> func_def | if_stmt | while_stmt | for_stmt | class_def | try_stmt

assign_stmt --> type NAME assignment basic_expression

basic_expression --> TERM '+' basic_expression | TERM '-' basic_expression | TERM '*' basic_expression | TERM '/' basic_expression | TERM '**' basic_expression | TERM '*' basic_expression | TERM 

assignment --> = | += | -= | *= | **=

type --> int | String | float | char | bool

import_stmt --> 'import' NAME

return_stmt --> 'return' return_list

return_list --> RETURNVAR (',' RETURNVAR )+ [','] | RETURNVAR ',' | RETURNVAR

global_stmt --> 'global' NAME+

func_def --> 'def' NAME '(' [NAME] ')' ':'

nonlocal_stmt --> 'nonlocal' NAME+
if_stmt --> 'if' expression ':' block ifel_stmt | 'if' expression ':' block [else_block]
ifel_stmt --> 'ifel' expression ':' block ifel_stmt | 'ifel' expression ':' block [else_block]
else_block --> 'else' ':' block

while_stmt --> 'while' expression ':' block [else_block]

for_stmt --> 'for' NAME 'in' NAME ':'

class_def --> 'class' '(' [NAME] ')' ':'

try_stmt --> 'try' ':' block | 'try' ':' block 'except' ':' block


block --> NEWLINE INDENT statements | small_stmt

expression --> NAME bool NAME [ logic expression ] | NAME bool truth [ logic expression ]

bool --> '>' | '>=' | '<' | '<=' | '==' | '!='

truth --> 'Tru' | 'False'

logic --> 'and' | 'or' | 'nah'

print_stmt -->  'print' ([expression (',' expression)* [',']] | '>>' expression [(',' expression)+ [',']])